{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nexport default function CadastrarPets() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      protetor = _useState2[0],\n      setProtetor = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tipo = _useState4[0],\n      setTipo = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nome = _useState6[0],\n      setNome = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      porte = _useState8[0],\n      setPorte = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      raca = _useState10[0],\n      setRaca = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      idade = _useState12[0],\n      setIdade = _useState12[1];\n\n  function limpar() {\n    setProtetor('');\n    setTipo('');\n    setNome('');\n    setPorte('');\n    setRaca('');\n    setIdade('');\n  }\n\n  function cadastrarDados() {\n    var res;\n    return _regeneratorRuntime.async(function cadastrarDados$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost/api_sgpApp/cadastrar_pet.php?protetor=\" + protetor + \"&tipo_pet=\" + tipo + \"&nome=\" + nome + \"&porte=\" + porte + \"&raca=\" + raca + \"&idade=\" + idade));\n\n          case 3:\n            res = _context.sent;\n            console.log(res.data.result);\n            setLista(res.data.result);\n            Keyboard.dismiss();\n            alert(\"Cadastro realizado\");\n            limpar();\n            listarDados();\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Erro: \", _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Digite o id do Protetor\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite o nome do Protetor\",\n    value: protetor,\n    onChangeText: function onChangeText(texto) {\n      return setProtetor(texto);\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Digite o tipo do animal\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite o tipo do animal\",\n    value: tipo,\n    onChangeText: function onChangeText(texto) {\n      return setTipo(texto);\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Digite o nome do pet\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite o nome do pet\",\n    value: nome,\n    onChangeText: function onChangeText(texto) {\n      return setNome(texto);\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Digite o porte do pet\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite o porte do pet\",\n    value: porte,\n    onChangeText: function onChangeText(texto) {\n      return setPorte(texto);\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Digite a ra\\xE7a do pet\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite a ra\\xE7a do pet\",\n    value: raca,\n    onChangeText: function onChangeText(texto) {\n      return setRaca(texto);\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Digite a idade do pet\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite a idade do pet\",\n    value: idade,\n    onChangeText: function onChangeText(texto) {\n      return setIdade(texto);\n    }\n  })), React.createElement(View, {\n    style: styles.areaBtn\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.botao, {\n      backgroundColor: \"#1d75cd\"\n    }],\n    onPress: cadastrarDados\n  }, React.createElement(Text, {\n    style: styles.botaoText\n  }, \"Cadastrar\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  text: {\n    marginTop: 25,\n    marginBottom: 15,\n    fontSize: 25,\n    fontWeight: \"bold\"\n  },\n  input: {\n    backgroundColor: \"#FFF\",\n    borderWidth: 1,\n    borderColor: \"#DDD\",\n    borderRadius: 5,\n    width: \"90%\",\n    padding: 10,\n    fontSize: 18\n  },\n  areaBtn: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginTop: 15,\n    justifyContent: \"space-around\"\n  },\n  botao: {\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 15,\n    borderRadius: 5\n  },\n  botaoText: {\n    fontSize: 22,\n    color: \"#FFF\"\n  },\n  resultado: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  itemText: {\n    fontSize: 22\n  }\n});","map":{"version":3,"sources":["C:/Users/Fernando/Desktop/app/sgp/src/pages/Cadastrar_pets.js"],"names":["axios","StatusBar","React","useEffect","useState","CadastrarPets","protetor","setProtetor","tipo","setTipo","nome","setNome","porte","setPorte","raca","setRaca","idade","setIdade","limpar","cadastrarDados","get","res","console","log","data","result","setLista","Keyboard","dismiss","alert","listarDados","styles","container","alignItems","text","input","texto","areaBtn","botao","backgroundColor","botaoText","StyleSheet","create","flex","marginTop","marginBottom","fontSize","fontWeight","borderWidth","borderColor","borderRadius","width","padding","flexDirection","justifyContent","height","color","resultado","itemText"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, SafeAreaView, Keyboard, FlatList, } from \"react-native\";\r\n\r\nexport default function CadastrarPets() {\r\n    const [protetor, setProtetor] = useState(\"\");\r\n    const [tipo, setTipo] = useState(\"\");\r\n    const [nome, setNome] = useState(\"\");\r\n    const [porte, setPorte] = useState(\"\");\r\n    const [raca, setRaca] = useState(\"\");\r\n    const [idade, setIdade] = useState(\"\");\r\n\r\n    function limpar() {\r\n        setProtetor('');\r\n        setTipo('');\r\n        setNome('');\r\n        setPorte('');\r\n        setRaca('');\r\n        setIdade('');\r\n    }\r\n    async function cadastrarDados() {\r\n        try {\r\n            const res = await axios.get(\r\n                \"http://localhost/api_sgpApp/cadastrar_pet.php?protetor=\" +\r\n                protetor +\r\n                \"&tipo_pet=\" +\r\n                tipo +\r\n                \"&nome=\" +\r\n                nome +\r\n                \"&porte=\" +\r\n                porte +\r\n                \"&raca=\" +\r\n                raca +\r\n                \"&idade=\" +\r\n                idade\r\n            );\r\n            console.log(res.data.result);\r\n            setLista(res.data.result);\r\n            Keyboard.dismiss();\r\n            alert(\"Cadastro realizado\");\r\n            limpar();\r\n            listarDados();\r\n        } catch (error) {\r\n            console.log(\"Erro: \", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n\r\n        <View style={{ alignItems: \"center\" }}>\r\n        <Text style={styles.text}>Digite o id do Protetor</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Digite o nome do Protetor\"\r\n          value={protetor}\r\n          onChangeText={(texto) => setProtetor(texto)}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ alignItems: \"center\" }}>\r\n        <Text style={styles.text}>Digite o tipo do animal</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Digite o tipo do animal\"\r\n          value={tipo}\r\n          onChangeText={(texto) => setTipo(texto)}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ alignItems: \"center\" }}>\r\n        <Text style={styles.text}>Digite o nome do pet</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Digite o nome do pet\"\r\n          value={nome}\r\n          onChangeText={(texto) => setNome(texto)}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ alignItems: \"center\" }}>\r\n        <Text style={styles.text}>Digite o porte do pet</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Digite o porte do pet\"\r\n          value={porte}\r\n          onChangeText={(texto) => setPorte(texto)}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ alignItems: \"center\" }}>\r\n        <Text style={styles.text}>Digite a raça do pet</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Digite a raça do pet\"\r\n          value={raca}\r\n          onChangeText={(texto) => setRaca(texto)}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ alignItems: \"center\" }}>\r\n        <Text style={styles.text}>Digite a idade do pet</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Digite a idade do pet\"\r\n          value={idade}\r\n          onChangeText={(texto) => setIdade(texto)}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.areaBtn}>\r\n        <TouchableOpacity\r\n          style={[styles.botao, { backgroundColor: \"#1d75cd\" }]}\r\n          onPress={cadastrarDados}\r\n        >\r\n          <Text style={styles.botaoText}>Cadastrar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\n//css\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    text: {\r\n        marginTop: 25,\r\n        marginBottom: 15,\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n    },\r\n    input: {\r\n        backgroundColor: \"#FFF\",\r\n        borderWidth: 1,\r\n        borderColor: \"#DDD\",\r\n        borderRadius: 5,\r\n        width: \"90%\",\r\n        padding: 10,\r\n        fontSize: 18,\r\n    },\r\n    areaBtn: {\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        marginTop: 15,\r\n        justifyContent: \"space-around\",\r\n    },\r\n    botao: {\r\n        height: 50,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        borderRadius: 5,\r\n    },\r\n    botaoText: {\r\n        fontSize: 22,\r\n        color: \"#FFF\",\r\n    },\r\n    resultado: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    itemText: {\r\n        fontSize: 22,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}