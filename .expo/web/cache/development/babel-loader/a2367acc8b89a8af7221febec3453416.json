{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  function doLogin() {\n    var reqs, ress;\n    return _regeneratorRuntime.async(function doLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.100.93/api_sgpApp/Controller.php', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                nameUser: user,\n                passwordUser: password\n              })\n            }));\n\n          case 2:\n            reqs = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(reqs.json());\n\n          case 5:\n            ress = _context.sent;\n            Keyboard.dismiss();\n\n            if (ress) {\n              navigation.navigate('Cadastrar Protetores');\n            } else {\n              setMessage('Usuário ou senha inválidos');\n              setTimeout(function () {\n                setMessage(null);\n              }, 3000);\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(ImageBackground, {\n    source: require(\"../../assets/background.jpg\"),\n    style: styles.imgBackground\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.txtLog\n  }, \"Login\"), message && React.createElement(Text, {\n    style: styles.aviso\n  }, message), React.createElement(TextInput, {\n    style: styles.text,\n    placeholder: \"Usu\\xE1rio\",\n    placeholderTextColor: \"#222\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(text) {\n      return setUser(text);\n    }\n  }), React.createElement(TextInput, {\n    style: styles.text,\n    placeholder: \"Senha\",\n    placeholderTextColor: \"#222\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: doLogin,\n    style: styles.areaBtn\n  }, React.createElement(Text, {\n    style: styles.btnText\n  }, \"Entrar\"))));\n}\nvar styles = StyleSheet.create({\n  imgBackground: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    resizeMode: 'cover',\n    backgroundColor: \"#4F7063\"\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: '90%'\n  },\n  txtLog: {\n    marginBottom: '10%',\n    justifyContent: \"center\",\n    color: \"#222\",\n    fontSize: 50,\n    height: '18%',\n    marginTop: '5%'\n  },\n  aviso: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: '90%',\n    color: \"#222\",\n    fontSize: 40,\n    marginBottom: '5%'\n  },\n  text: {\n    width: '90%',\n    marginBottom: 15,\n    color: \"#222\",\n    fontSize: 40,\n    borderRadius: 30,\n    padding: 10,\n    borderColor: \"#222\",\n    borderWidth: 4,\n    padding: 10\n  },\n  areaBtn: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderColor: \"#222\",\n    width: '30%',\n    borderRadius: 15,\n    borderWidth: 4,\n    marginTop: '5%'\n  },\n  btnText: {\n    fontSize: '50%',\n    color: \"#222\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Fernando/Desktop/app/sgp/src/pages/login.js"],"names":["React","useState","Login","navigation","user","setUser","password","setPassword","message","setMessage","doLogin","fetch","method","headers","body","JSON","stringify","nameUser","passwordUser","reqs","json","ress","Keyboard","dismiss","navigate","setTimeout","require","styles","imgBackground","container","txtLog","aviso","text","areaBtn","btnText","StyleSheet","create","flex","alignItems","justifyContent","resizeMode","backgroundColor","width","marginBottom","color","fontSize","height","marginTop","borderRadius","padding","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {KeyboardAvoidingView ,Image, ImageBackground, Keyboard, Text, TextInput, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\n\r\n\r\n\r\nexport default function Login({navigation}) {\r\n\r\n    const [user,setUser]=useState(null);\r\n    const [password,setPassword]=useState(null);\r\n    const [message,setMessage]=useState(null);\r\n\r\n    //Fazer Login\r\n    async function doLogin()\r\n    {\r\n        //onde está \"192.168.100.93\" coloque seu ipv4\r\n        let reqs = await fetch('http://192.168.100.93/api_sgpApp/Controller.php',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                nameUser: user,\r\n                passwordUser: password\r\n            })\r\n        });\r\n        let ress = await reqs.json();\r\n        Keyboard.dismiss();\r\n       if(ress){\r\n           navigation.navigate('Cadastrar Protetores');\r\n       }else{\r\n            setMessage('Usuário ou senha inválidos');\r\n            setTimeout(()=>{\r\n                setMessage(null);\r\n            },3000);\r\n       }\r\n    }\r\n\r\n    return (\r\n        \r\n            \r\n\r\n                <ImageBackground \r\n                    source={require('../../assets/background.jpg')} \r\n                    style={styles.imgBackground}\r\n                >\r\n\r\n                    <View style={styles.container}>\r\n\r\n                    <Text style={styles.txtLog}>Login</Text>\r\n\r\n                        {message &&(\r\n                            <Text style={styles.aviso}>{message}</Text>\r\n                        )}\r\n                    \r\n                        <TextInput\r\n                            style={styles.text}\r\n                            placeholder=\"Usuário\"\r\n                            placeholderTextColor=\"#222\"\r\n                            autoCorrect={false}\r\n                            onChangeText={(text)=>setUser(text)}\r\n                        />\r\n                    \r\n                        <TextInput\r\n                            style={styles.text}\r\n                            placeholder=\"Senha\"\r\n                            placeholderTextColor=\"#222\"\r\n                            autoCorrect={false}\r\n                            secureTextEntry={true}\r\n                            onChangeText={(text)=>setPassword(text)}\r\n                        />\r\n\r\n                        <TouchableOpacity onPress={doLogin} style={styles.areaBtn}>\r\n                            <Text style={styles.btnText}>Entrar</Text>\r\n                        </TouchableOpacity>\r\n                    </View> \r\n\r\n                \r\n                </ImageBackground>\r\n            \r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    imgBackground: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        resizeMode: 'cover',\r\n        backgroundColor: \"#4F7063\",\r\n    },\r\n    container: {\r\n        flex:1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: '90%',\r\n    },\r\n    txtLog: {\r\n        marginBottom:'10%',\r\n        justifyContent: \"center\",\r\n        color: \"#222\",\r\n        fontSize: 50,\r\n        height: '18%',\r\n        marginTop: '5%',\r\n    },\r\n    aviso: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: '90%',\r\n        color: \"#222\",\r\n        fontSize: 40,\r\n        marginBottom: '5%',\r\n    },\r\n    text: {\r\n        width: '90%',\r\n        marginBottom: 15,\r\n        color: \"#222\",\r\n        fontSize: 40,\r\n        borderRadius: 30,\r\n        padding: 10,\r\n        borderColor: \"#222\",      \r\n        borderWidth: 4,\r\n        padding: 10,\r\n    },\r\n    areaBtn: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderColor: \"#222\",\r\n        width: '30%',\r\n        borderRadius: 15,\r\n        borderWidth: 4,\r\n        marginTop: '5%',\r\n    },\r\n    btnText: {\r\n        fontSize: '50%',\r\n        color: \"#222\",\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}