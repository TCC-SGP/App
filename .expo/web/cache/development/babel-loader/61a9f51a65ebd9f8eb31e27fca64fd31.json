{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  function doLogin() {\n    var reqs, ress;\n    return _regeneratorRuntime.async(function doLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://localhost/api_sgpApp/Controller.php', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                nameUser: user,\n                passwordUser: password\n              })\n            }));\n\n          case 2:\n            reqs = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(reqs.json());\n\n          case 5:\n            ress = _context.sent;\n            Keyboard.dismiss();\n\n            if (ress) {\n              navigation.navigate('Home');\n            } else {\n              setMessage('Usuário ou senha inválidos');\n              setTimeout(function () {\n                setMessage(null);\n              }, 3000);\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: css.login__form\n  }, message && React.createElement(Text, {\n    style: styles.text\n  }, message), React.createElement(TextInput, {\n    style: styles.text,\n    placeholder: \"Usu\\xE1rio:\",\n    placeholderTextColor: \"#ccc\",\n    onChangeText: function onChangeText(text) {\n      return setUser(text);\n    }\n  }), React.createElement(TextInput, {\n    style: styles.text,\n    placeholder: \"Senha:\",\n    placeholderTextColor: \"#ccc\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: doLogin,\n    style: css.login__button\n  }, React.createElement(Text, {\n    style: (styles.botao, {\n      backgroundColor: \"#1d75cd\"\n    })\n  }, \"Entrar\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  text: {\n    marginTop: 25,\n    marginBottom: 15,\n    fontSize: 25,\n    fontWeight: \"bold\"\n  },\n  areaBtn: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginTop: 15,\n    justifyContent: \"space-around\"\n  },\n  botao: {\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 15,\n    borderRadius: 5\n  },\n  botaoText: {\n    fontSize: 22,\n    color: \"#FFF\"\n  },\n  resultado: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  itemText: {\n    fontSize: 22\n  }\n});","map":{"version":3,"sources":["C:/Users/Fernando/Desktop/app/sgp/src/pages/login.js"],"names":["React","useState","useEffect","SafeAreaView","Login","navigation","user","setUser","password","setPassword","message","setMessage","doLogin","fetch","method","headers","body","JSON","stringify","nameUser","passwordUser","reqs","json","ress","Keyboard","dismiss","navigate","setTimeout","styles","container","css","login__form","text","login__button","botao","backgroundColor","StyleSheet","create","flex","marginTop","marginBottom","fontSize","fontWeight","areaBtn","alignItems","flexDirection","justifyContent","height","padding","borderRadius","botaoText","color","resultado","itemText"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Image, Button, ImageBackground, ScrollView, Keyboard, Text, TextInput, TouchableOpacity, TouchableWithoutFeedback, View, StyleSheet} from \"react-native\";\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\n\r\n\r\nexport default function Login({navigation}) {\r\n\r\n    const [user,setUser]=useState(null);\r\n    const [password,setPassword]=useState(null);\r\n    const [message,setMessage]=useState(null);\r\n\r\n    //Fazer Login\r\n    async function doLogin()\r\n    {\r\n        let reqs = await fetch('http://localhost/api_sgpApp/Controller.php',{\r\n            method: 'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                nameUser: user,\r\n                passwordUser: password\r\n            })\r\n        });\r\n        let ress = await reqs.json();\r\n        Keyboard.dismiss();\r\n       if(ress){\r\n           navigation.navigate('Home');\r\n       }else{\r\n            setMessage('Usuário ou senha inválidos');\r\n            setTimeout(()=>{\r\n                setMessage(null);\r\n            },3000);\r\n       }\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n\r\n                <View style={css.login__form}>\r\n                    {message &&(\r\n                        <Text style={styles.text}>{message}</Text>\r\n                    )}\r\n                    <TextInput\r\n                            style={styles.text}\r\n                            placeholder=\"Usuário:\"\r\n                            placeholderTextColor=\"#ccc\"\r\n                            onChangeText={(text)=>setUser(text)}\r\n                    />\r\n                    <TextInput\r\n                            style={styles.text}\r\n                            placeholder=\"Senha:\"\r\n                            placeholderTextColor=\"#ccc\"\r\n                            secureTextEntry={true}\r\n                            onChangeText={(text)=>setPassword(text)}\r\n                    />\r\n                    <TouchableOpacity onPress={doLogin} style={css.login__button}>\r\n                        <Text style={styles.botao, { backgroundColor: \"#1d75cd\" }}>Entrar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n    </SafeAreaView>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    text: {\r\n        marginTop: 25,\r\n        marginBottom: 15,\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n    },\r\n    areaBtn: {\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        marginTop: 15,\r\n        justifyContent: \"space-around\",\r\n    },\r\n    botao: {\r\n        height: 50,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        borderRadius: 5,\r\n    },\r\n    botaoText: {\r\n        fontSize: 22,\r\n        color: \"#FFF\",\r\n    },\r\n    resultado: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    itemText: {\r\n        fontSize: 22,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}